{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport Head from \"next/head\";\nimport { useState, useRef } from \"react\";\nimport axios from \"axios\";\nimport domtoimage from \"dom-to-image\";\nimport { saveAs } from \"file-saver\";\nimport Header from \"../components/Header\";\nimport Main from \"../components/Main\";\nimport Settings from \"../components/Settings\";\nimport Footer from \"../components/Footer\";\nimport { FaYoutube, FaFacebook, FaTwitter } from \"react-icons/fa\";\nimport { Text, Box, Flex, HStack, Button, ButtonGroup } from \"@chakra-ui/react\";\nimport { Card, CardImg, NavItem, NavLink, Nav, Container, Row, Col, UncontrolledTooltip } from \"reactstrap\";\n\nfunction App() {\n  const {\n    0: bg,\n    1: setBg\n  } = useState(\"linear-gradient(106.8deg, rgb(117, 255, 220) 6%, rgb(163, 216, 255) 47.6%, rgb(248, 215, 251) 87.8%)\");\n  const tweetRef = useRef(null);\n  const {\n    0: tweetData,\n    1: setTweetData\n  } = useState(null);\n  const {\n    0: showTime,\n    1: setShowTime\n  } = useState(true);\n  const {\n    0: showMetrics,\n    1: setShowMetrics\n  } = useState(true);\n  const {\n    0: showSource,\n    1: setShowSource\n  } = useState(true);\n  const {\n    0: scale,\n    1: setScale\n  } = useState(0.9);\n  const {\n    0: hint,\n    1: setHint\n  } = useState(true);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: error,\n    1: setError\n  } = useState(false);\n\n  const bringTweet = async e => {\n    try {\n      e.preventDefault();\n      setHint(false);\n      setLoading(true);\n      const url = e.target.elements.tweetURL.value;\n      const id = url.split(\"/\")[5];\n      const {\n        data,\n        status\n      } = await axios.get(`/api/tweet/${id}`);\n\n      if (data.message) {\n        setError(true);\n        setLoading(false);\n        setTweetData(null);\n      } else {\n        setLoading(false);\n        setTweetData(data.data);\n        setError(false);\n      }\n    } catch (e) {\n      setError(true);\n      setLoading(false);\n      setTweetData(null);\n    }\n  };\n\n  const convert = async format => {\n    const node = tweetRef.current;\n    const scale = 2;\n    let dataUrl;\n    const style = {\n      transform: \"scale(2)\",\n      transformOrigin: \"top left\"\n    };\n    const param = {\n      height: node.offsetHeight * scale,\n      width: node.offsetWidth * scale,\n      quality: 1,\n      style\n    };\n\n    switch (format) {\n      case \"png\":\n        {\n          dataUrl = await domtoimage.toPng(node, param);\n          saveAs(dataUrl, `${new Date().toJSON()}.${format}`);\n          return;\n        }\n\n      case \"jpeg\":\n        {\n          dataUrl = await domtoimage.toJpeg(node, param);\n          saveAs(dataUrl, `${new Date().toJSON()}.${format}`);\n          return;\n        }\n\n      case \"svg\":\n        {\n          dataUrl = await domtoimage.toSvg(node, param);\n          saveAs(dataUrl, `${new Date().toJSON()}.${format}`);\n          return;\n        }\n    }\n  };\n\n  const propsForSettings = {\n    showTime,\n    setShowTime,\n    showMetrics,\n    setShowMetrics,\n    showSource,\n    setShowSource,\n    scale,\n    setScale,\n    convert,\n    bg,\n    setBg\n  };\n  const flex = {\n    base: \"column\",\n    lg: \"row\"\n  };\n  return /*#__PURE__*/_jsxs(Box, {\n    children: [/*#__PURE__*/_jsxs(Head, {\n      children: [/*#__PURE__*/_jsx(\"title\", {\n        children: \"Get beautiful tweets\"\n      }), /*#__PURE__*/_jsx(\"link\", {\n        rel: \"icon\",\n        type: \"image/svg+xml\",\n        href: \"/favicon.svg\"\n      })]\n    }), /*#__PURE__*/_jsx(Header, {\n      bringTweet: bringTweet\n    }), /*#__PURE__*/_jsxs(Flex, {\n      my: \"16\",\n      direction: flex,\n      p: \"4\",\n      children: [/*#__PURE__*/_jsx(Main, {\n        tweetRef: tweetRef,\n        bg: bg,\n        scale: scale,\n        hint: hint,\n        loading: loading,\n        error: error,\n        tweetData: tweetData,\n        showTime: showTime,\n        showMetrics: showMetrics,\n        showSource: showSource\n      }), !hint && /*#__PURE__*/_jsx(Settings, {\n        props: propsForSettings\n      })]\n    }), /*#__PURE__*/_jsxs(HStack, {\n      children: [/*#__PURE__*/_jsx(Button, {\n        colorScheme: \"facebook\",\n        leftIcon: /*#__PURE__*/_jsx(FaFacebook, {}),\n        children: \"Facebook\"\n      }), /*#__PURE__*/_jsx(Button, {\n        colorScheme: \"twitter\",\n        leftIcon: /*#__PURE__*/_jsx(FaTwitter, {}),\n        children: \"Twitter\"\n      })]\n    }), /*#__PURE__*/_jsxs(\"footer\", {\n      children: [/*#__PURE__*/_jsx(Text, {\n        px: \"1rem\",\n        className: \"i\",\n        color: \"blue.200\",\n        fontSize: \"lg\",\n        children: \"Thank you for supporting us!\"\n      }), /*#__PURE__*/_jsx(Text, {\n        px: \"1rem\",\n        className: \"i\",\n        color: \"gray.500\",\n        fontSize: \"lg\",\n        isTruncated: true,\n        children: \"Let's get in touch on any of these platforms.\"\n      }), /*#__PURE__*/_jsx(\"hr\", {}), /*#__PURE__*/_jsxs(Text, {\n        px: \"1rem\",\n        className: \"i\",\n        color: \"gray.500\",\n        fontSize: \"lg\",\n        children: [\"Made with Love \\uD83D\\uDC9C by\", \" \", /*#__PURE__*/_jsx(\"a\", {\n          href: \"https://reactjs.org/\",\n          rel: \"noreferrer\",\n          target: \"_blank\",\n          children: \"ReactJs\"\n        }), \". Check out on\", \" \", /*#__PURE__*/_jsx(\"a\", {\n          href: \"https://github.com/th-rpy\",\n          rel: \"noreferrer\",\n          target: \"_blank\",\n          children: \"Github\"\n        }), \".\"]\n      })]\n    })]\n  });\n}\n\nexport default App;","map":null,"metadata":{},"sourceType":"module"}