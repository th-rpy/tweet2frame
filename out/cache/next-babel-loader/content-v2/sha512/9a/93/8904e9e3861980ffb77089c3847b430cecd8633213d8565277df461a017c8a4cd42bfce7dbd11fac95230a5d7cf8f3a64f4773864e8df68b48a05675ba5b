{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useState, useEffect, useCallback, memo, useRef } from \"react\";\nexport default /*#__PURE__*/memo(function Typewriter(_ref) {\n  var loop = _ref.loop,\n      typeSpeed = _ref.typeSpeed,\n      deleteSpeed = _ref.deleteSpeed,\n      delaySpeed = _ref.delaySpeed,\n      words = _ref.words,\n      cursor = _ref.cursor;\n\n  // State\n  var _useState = useState(100),\n      speed = _useState[0],\n      setSpeed = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      text = _useState2[0],\n      setText = _useState2[1]; // Refs\n\n\n  var isDeleting = useRef(false);\n  var counter = useRef(0);\n  var handleTyping = useCallback(function () {\n    var index = loop ? counter.current % words.length : counter.current;\n    var word = words[index];\n    setSpeed(typeSpeed || 100);\n\n    if (isDeleting.current) {\n      // Set stoping speed\n      setSpeed(deleteSpeed || 50); // Move backwards\n\n      setText(function (prev) {\n        return word.substring(0, prev.length - 1);\n      }); // Move to the next word when text is empty\n\n      if (text === \"\") {\n        isDeleting.current = false;\n        counter.current = counter.current + 1;\n      }\n    } else {\n      // Move Forward\n      setText(function (prev) {\n        return word.substring(0, prev.length + 1);\n      }); // Word is completed\n\n      if (text === word) {\n        // if not loop just return\n        if (!loop) return; // else set the speed delay and start over\n\n        setSpeed(delaySpeed || 1500);\n        isDeleting.current = true;\n      }\n    }\n  }, [delaySpeed, deleteSpeed, loop, text, typeSpeed, words]);\n  useEffect(function () {\n    var timer = setTimeout(function () {\n      return handleTyping();\n    }, speed);\n    return function () {\n      return clearTimeout(timer);\n    };\n  }, [handleTyping, speed]);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(\"span\", {\n      children: text\n    }), cursor && /*#__PURE__*/_jsx(\"span\", {\n      className: \"blinking-cursor\",\n      children: \"|\"\n    })]\n  });\n});","map":null,"metadata":{},"sourceType":"module"}